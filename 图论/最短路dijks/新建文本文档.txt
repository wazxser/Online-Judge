#include <iostream>
#include <cstdio>
#include <memory.h>
#define INF 0x3f3f3f3f

using namespace std;

int dis[1010], cost[1010];
int map1[1010][1010], map2[1010][1010];
int n, m;
int visit[1010];
int a, b, c, p, s, t, min_dis, temp;

void dijkstra(){
    visit[s] = 1;
    for(int i = 1; i <= n; i++){
        dis[i] = map1[s][i];
        cost[i] = map2[s][i];
    }

    for(int i = 0; i < n-1; i++){
        min_dis = INF, temp = 0;
        for(int j = 1; j <= n; j++){
            //在未找到最短路的点中找最小的，加入最短路，dijkstra边权值都是正的，不可能经过该点往外扩点时还存在最短路
            if(!visit[j] && dis[j] < min_dis){
                min_dis = dis[j];
                temp = j;
            }
        }

        visit[temp] = 1;
        for(int j = 1; j <= n; j++){
            if(!visit[j] && dis[temp] + map1[temp][j] < dis[j]){
                dis[j] =  dis[temp] + map1[temp][j];
                //没有更新cost
                cost[j] = cost[temp] + map2[temp][j];
            }
            else if(!visit[j] && dis[temp] + map1[temp][j] == dis[j]){
                if(cost[temp] + map2[temp][j] < cost[j]){
                    cost[j] = cost[temp]+map2[temp][j];
                }
            }
        }
    }
}

int main(){
    while(~scanf("%d%d", &n, &m)){
        if(n == 0 && m == 0){
            break;
        }
        memset(visit, 0, sizeof visit);

        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= n; j++){
                if(i == j){
                    map1[i][j] = 0;
                    map2[i][j] = 0;
                }
                else{
                    map1[i][j] = INF;
                    map2[i][j] = INF;
                }
            }
        }

        for(int i = 0; i < m; i++){
            scanf("%d%d%d%d", &a, &b, &c, &p);
            if(c < map1[a][b]){
                map1[a][b] = map1[b][a] = c;
                map2[a][b] = map2[b][a] = p;
            }
            else if(c == map1[a][b]){
                if(p < map2[a][b]){
                    map2[a][b] = map2[b][a] = p;
                }
            }
        }

        scanf("%d%d", &s, &t);
        dijkstra();
        printf("%d %d\n", dis[t], cost[t]);
    }

    return 0;
}
